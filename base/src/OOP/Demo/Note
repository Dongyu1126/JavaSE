//super知识点
1.super调用父类的构造方法，必须在构造方法的第一个
2.super必须只能出现在子类的方法或者构造方法中！
3.super和this不能同时调用构造方法

VS this：
 代表的对象不同
 this：本身调用者这个对象
 super：代表父类对象的应用

 前提：
 this：没有继承也可以使用
 super：只能在继承条件下才能使用

 构造方法：
 this()；本类的构造
 super()；父类的构造


//重写：需要有继承关系，子类重写父类的方法
1.方法名必须相同
2,参数列表必须相同
3.修饰符：范围可以扩大但不能缩小.  public>Protected>Default>private
4.抛出的异常：范围可以被缩小，但不能被扩大. ClassNotFoundException --> Exception

其中以下几个方法不能被重写：
1.static 方法，属于类，它不属于实例
2.final 常量
3.private 方法

重写：子类的方法和父类的必须要一致；方法体不同


为什么需要重写：
1.父类的功能，子类不一定需要
fn+alt+insert

//多态：同一个方法可以根据发送对象的不同而采用多种不同的行为方式。
1.多态是方法的多态，属性没有多态（深层理解：属性是静态的数据，方法是动态的行为）
2.父类和子类，要有联系    类型转换异常！ClassCastException!这种异常说明父子类之间出了点问题
3.存在的条件：要有继承关系，方法需要重写  父类引用指向子类对象！Father f1 = new Son();


//补充：通过 final 修饰的类不能被继承，无子类
final之后断子绝孙
